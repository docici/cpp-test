/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: paxos_msg.proto */

#ifndef PROTOBUF_C_paxos_5fmsg_2eproto__INCLUDED
#define PROTOBUF_C_paxos_5fmsg_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Xh__Header Xh__Header;
typedef struct _Xh__PaxosMsg Xh__PaxosMsg;
typedef struct _Xh__CheckpointMsg Xh__CheckpointMsg;
typedef struct _Xh__AcceptorStateData Xh__AcceptorStateData;
typedef struct _Xh__PaxosNodeInfo Xh__PaxosNodeInfo;
typedef struct _Xh__SystemVariables Xh__SystemVariables;
typedef struct _Xh__MasterVariables Xh__MasterVariables;
typedef struct _Xh__PaxosValue Xh__PaxosValue;
typedef struct _Xh__BatchPaxosValues Xh__BatchPaxosValues;


/* --- enums --- */


/* --- messages --- */

struct  _Xh__Header
{
  ProtobufCMessage base;
  uint64_t gid;
  uint64_t rid;
  int32_t cmdid;
  protobuf_c_boolean has_version;
  int32_t version;
};
#define XH__HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xh__header__descriptor) \
    , 0, 0, 0, 0,0 }


struct  _Xh__PaxosMsg
{
  ProtobufCMessage base;
  int32_t msgtype;
  protobuf_c_boolean has_instanceid;
  uint64_t instanceid;
  protobuf_c_boolean has_nodeid;
  uint64_t nodeid;
  protobuf_c_boolean has_proposalid;
  uint64_t proposalid;
  protobuf_c_boolean has_proposalnodeid;
  uint64_t proposalnodeid;
  protobuf_c_boolean has_value;
  ProtobufCBinaryData value;
  protobuf_c_boolean has_preacceptid;
  uint64_t preacceptid;
  protobuf_c_boolean has_preacceptnodeid;
  uint64_t preacceptnodeid;
  protobuf_c_boolean has_rejectbypromiseid;
  uint64_t rejectbypromiseid;
  protobuf_c_boolean has_nowinstanceid;
  uint64_t nowinstanceid;
  protobuf_c_boolean has_minchoseninstanceid;
  uint64_t minchoseninstanceid;
  protobuf_c_boolean has_lastchecksum;
  uint32_t lastchecksum;
  protobuf_c_boolean has_flag;
  uint32_t flag;
  protobuf_c_boolean has_systemvariables;
  ProtobufCBinaryData systemvariables;
  protobuf_c_boolean has_mastervariables;
  ProtobufCBinaryData mastervariables;
};
#define XH__PAXOS_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xh__paxos_msg__descriptor) \
    , 0, 0,0, 0,0, 0,0, 0,0, 0,{0,NULL}, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,{0,NULL}, 0,{0,NULL} }


struct  _Xh__CheckpointMsg
{
  ProtobufCMessage base;
  int32_t msgtype;
  uint64_t nodeid;
  protobuf_c_boolean has_flag;
  int32_t flag;
  uint64_t uuid;
  uint64_t sequence;
  protobuf_c_boolean has_checkpointinstanceid;
  uint64_t checkpointinstanceid;
  protobuf_c_boolean has_checksum;
  uint32_t checksum;
  char *filepath;
  protobuf_c_boolean has_smid;
  int32_t smid;
  protobuf_c_boolean has_offset;
  uint64_t offset;
  protobuf_c_boolean has_buffer;
  ProtobufCBinaryData buffer;
};
#define XH__CHECKPOINT_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xh__checkpoint_msg__descriptor) \
    , 0, 0, 0,0, 0, 0, 0,0, 0,0, NULL, 0,0, 0,0, 0,{0,NULL} }


struct  _Xh__AcceptorStateData
{
  ProtobufCMessage base;
  uint64_t instanceid;
  uint64_t promiseid;
  uint64_t promisenodeid;
  uint64_t acceptedid;
  uint64_t acceptednodeid;
  ProtobufCBinaryData acceptedvalue;
  uint32_t checksum;
};
#define XH__ACCEPTOR_STATE_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xh__acceptor_state_data__descriptor) \
    , 0, 0, 0, 0, 0, {0,NULL}, 0 }


struct  _Xh__PaxosNodeInfo
{
  ProtobufCMessage base;
  uint64_t rid;
  uint64_t nodeid;
};
#define XH__PAXOS_NODE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xh__paxos_node_info__descriptor) \
    , 0, 0 }


struct  _Xh__SystemVariables
{
  ProtobufCMessage base;
  uint64_t gid;
  size_t n_membership;
  Xh__PaxosNodeInfo **membership;
  uint64_t version;
};
#define XH__SYSTEM_VARIABLES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xh__system_variables__descriptor) \
    , 0, 0,NULL, 0 }


struct  _Xh__MasterVariables
{
  ProtobufCMessage base;
  uint64_t masternodeid;
  uint64_t version;
  uint32_t leasetime;
};
#define XH__MASTER_VARIABLES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xh__master_variables__descriptor) \
    , 0, 0, 0 }


struct  _Xh__PaxosValue
{
  ProtobufCMessage base;
  int32_t smid;
  ProtobufCBinaryData value;
};
#define XH__PAXOS_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xh__paxos_value__descriptor) \
    , 0, {0,NULL} }


struct  _Xh__BatchPaxosValues
{
  ProtobufCMessage base;
  size_t n_values;
  Xh__PaxosValue **values;
};
#define XH__BATCH_PAXOS_VALUES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xh__batch_paxos_values__descriptor) \
    , 0,NULL }


/* Xh__Header methods */
void   xh__header__init
                     (Xh__Header         *message);
size_t xh__header__get_packed_size
                     (const Xh__Header   *message);
size_t xh__header__pack
                     (const Xh__Header   *message,
                      uint8_t             *out);
size_t xh__header__pack_to_buffer
                     (const Xh__Header   *message,
                      ProtobufCBuffer     *buffer);
Xh__Header *
       xh__header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xh__header__free_unpacked
                     (Xh__Header *message,
                      ProtobufCAllocator *allocator);
/* Xh__PaxosMsg methods */
void   xh__paxos_msg__init
                     (Xh__PaxosMsg         *message);
size_t xh__paxos_msg__get_packed_size
                     (const Xh__PaxosMsg   *message);
size_t xh__paxos_msg__pack
                     (const Xh__PaxosMsg   *message,
                      uint8_t             *out);
size_t xh__paxos_msg__pack_to_buffer
                     (const Xh__PaxosMsg   *message,
                      ProtobufCBuffer     *buffer);
Xh__PaxosMsg *
       xh__paxos_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xh__paxos_msg__free_unpacked
                     (Xh__PaxosMsg *message,
                      ProtobufCAllocator *allocator);
/* Xh__CheckpointMsg methods */
void   xh__checkpoint_msg__init
                     (Xh__CheckpointMsg         *message);
size_t xh__checkpoint_msg__get_packed_size
                     (const Xh__CheckpointMsg   *message);
size_t xh__checkpoint_msg__pack
                     (const Xh__CheckpointMsg   *message,
                      uint8_t             *out);
size_t xh__checkpoint_msg__pack_to_buffer
                     (const Xh__CheckpointMsg   *message,
                      ProtobufCBuffer     *buffer);
Xh__CheckpointMsg *
       xh__checkpoint_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xh__checkpoint_msg__free_unpacked
                     (Xh__CheckpointMsg *message,
                      ProtobufCAllocator *allocator);
/* Xh__AcceptorStateData methods */
void   xh__acceptor_state_data__init
                     (Xh__AcceptorStateData         *message);
size_t xh__acceptor_state_data__get_packed_size
                     (const Xh__AcceptorStateData   *message);
size_t xh__acceptor_state_data__pack
                     (const Xh__AcceptorStateData   *message,
                      uint8_t             *out);
size_t xh__acceptor_state_data__pack_to_buffer
                     (const Xh__AcceptorStateData   *message,
                      ProtobufCBuffer     *buffer);
Xh__AcceptorStateData *
       xh__acceptor_state_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xh__acceptor_state_data__free_unpacked
                     (Xh__AcceptorStateData *message,
                      ProtobufCAllocator *allocator);
/* Xh__PaxosNodeInfo methods */
void   xh__paxos_node_info__init
                     (Xh__PaxosNodeInfo         *message);
size_t xh__paxos_node_info__get_packed_size
                     (const Xh__PaxosNodeInfo   *message);
size_t xh__paxos_node_info__pack
                     (const Xh__PaxosNodeInfo   *message,
                      uint8_t             *out);
size_t xh__paxos_node_info__pack_to_buffer
                     (const Xh__PaxosNodeInfo   *message,
                      ProtobufCBuffer     *buffer);
Xh__PaxosNodeInfo *
       xh__paxos_node_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xh__paxos_node_info__free_unpacked
                     (Xh__PaxosNodeInfo *message,
                      ProtobufCAllocator *allocator);
/* Xh__SystemVariables methods */
void   xh__system_variables__init
                     (Xh__SystemVariables         *message);
size_t xh__system_variables__get_packed_size
                     (const Xh__SystemVariables   *message);
size_t xh__system_variables__pack
                     (const Xh__SystemVariables   *message,
                      uint8_t             *out);
size_t xh__system_variables__pack_to_buffer
                     (const Xh__SystemVariables   *message,
                      ProtobufCBuffer     *buffer);
Xh__SystemVariables *
       xh__system_variables__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xh__system_variables__free_unpacked
                     (Xh__SystemVariables *message,
                      ProtobufCAllocator *allocator);
/* Xh__MasterVariables methods */
void   xh__master_variables__init
                     (Xh__MasterVariables         *message);
size_t xh__master_variables__get_packed_size
                     (const Xh__MasterVariables   *message);
size_t xh__master_variables__pack
                     (const Xh__MasterVariables   *message,
                      uint8_t             *out);
size_t xh__master_variables__pack_to_buffer
                     (const Xh__MasterVariables   *message,
                      ProtobufCBuffer     *buffer);
Xh__MasterVariables *
       xh__master_variables__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xh__master_variables__free_unpacked
                     (Xh__MasterVariables *message,
                      ProtobufCAllocator *allocator);
/* Xh__PaxosValue methods */
void   xh__paxos_value__init
                     (Xh__PaxosValue         *message);
size_t xh__paxos_value__get_packed_size
                     (const Xh__PaxosValue   *message);
size_t xh__paxos_value__pack
                     (const Xh__PaxosValue   *message,
                      uint8_t             *out);
size_t xh__paxos_value__pack_to_buffer
                     (const Xh__PaxosValue   *message,
                      ProtobufCBuffer     *buffer);
Xh__PaxosValue *
       xh__paxos_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xh__paxos_value__free_unpacked
                     (Xh__PaxosValue *message,
                      ProtobufCAllocator *allocator);
/* Xh__BatchPaxosValues methods */
void   xh__batch_paxos_values__init
                     (Xh__BatchPaxosValues         *message);
size_t xh__batch_paxos_values__get_packed_size
                     (const Xh__BatchPaxosValues   *message);
size_t xh__batch_paxos_values__pack
                     (const Xh__BatchPaxosValues   *message,
                      uint8_t             *out);
size_t xh__batch_paxos_values__pack_to_buffer
                     (const Xh__BatchPaxosValues   *message,
                      ProtobufCBuffer     *buffer);
Xh__BatchPaxosValues *
       xh__batch_paxos_values__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xh__batch_paxos_values__free_unpacked
                     (Xh__BatchPaxosValues *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Xh__Header_Closure)
                 (const Xh__Header *message,
                  void *closure_data);
typedef void (*Xh__PaxosMsg_Closure)
                 (const Xh__PaxosMsg *message,
                  void *closure_data);
typedef void (*Xh__CheckpointMsg_Closure)
                 (const Xh__CheckpointMsg *message,
                  void *closure_data);
typedef void (*Xh__AcceptorStateData_Closure)
                 (const Xh__AcceptorStateData *message,
                  void *closure_data);
typedef void (*Xh__PaxosNodeInfo_Closure)
                 (const Xh__PaxosNodeInfo *message,
                  void *closure_data);
typedef void (*Xh__SystemVariables_Closure)
                 (const Xh__SystemVariables *message,
                  void *closure_data);
typedef void (*Xh__MasterVariables_Closure)
                 (const Xh__MasterVariables *message,
                  void *closure_data);
typedef void (*Xh__PaxosValue_Closure)
                 (const Xh__PaxosValue *message,
                  void *closure_data);
typedef void (*Xh__BatchPaxosValues_Closure)
                 (const Xh__BatchPaxosValues *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor xh__header__descriptor;
extern const ProtobufCMessageDescriptor xh__paxos_msg__descriptor;
extern const ProtobufCMessageDescriptor xh__checkpoint_msg__descriptor;
extern const ProtobufCMessageDescriptor xh__acceptor_state_data__descriptor;
extern const ProtobufCMessageDescriptor xh__paxos_node_info__descriptor;
extern const ProtobufCMessageDescriptor xh__system_variables__descriptor;
extern const ProtobufCMessageDescriptor xh__master_variables__descriptor;
extern const ProtobufCMessageDescriptor xh__paxos_value__descriptor;
extern const ProtobufCMessageDescriptor xh__batch_paxos_values__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_paxos_5fmsg_2eproto__INCLUDED */
